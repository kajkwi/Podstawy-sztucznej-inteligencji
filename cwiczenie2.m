close all; clear all; clc;

%zmienna wejœciowa dla funkcji tworz¹cych sieæ neuronow¹
%dla tablicy pól obrazuj¹cych literê 5x5
%25 par wejœæ z dwiema mo¿liwymi wartoœciami (minimalna - 0, maksymalna -1)
wartosci=[0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 
    0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;];

%iloœæ wyjœæ z sieci = 1
S=1;

%metoda 1.
%net = newlin(wartosci,S);
%metoda 2.
net = newp(wartosci,S);

%kolumnowa reprezentacja binarna 10 liter alfabetu dla tablicy 5x5
         %A a B b C c D d E e F f H h I i K k L l
wejscie=[0 0 1 1 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1;
         1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 0 0;
         1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 0 0; 
         1 0 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 0;
         0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;%
         1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1;
         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0;
         0 1 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0;
         1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;%
         1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1;
         1 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0;
         1 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 0 1 0 0;
         1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0;
         1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;%
         1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0;
         0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0;
         0 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0;
         1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;% 
         1 0 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1;
         0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1;
         0 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 1;
         0 1 0 0 1 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0;
         1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;];%

        %A a B b C c D d E e F f H h I i K k L l
wyjscie=[1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0]; 

net.name='Rozpoznawanie wielkoœci liter';

%parametry treningu sieci do rozpoznawania wielkoœci liter
net.trainParam.epochs = 10000;      %maksymalna iloœæ epok
net.trainParam.goal = 0.0001;       %b³¹d œredniokwadratowy
net.trainParam.mu = 0.001;          %wspó³czynnik uczenia

%trening sieci - proces uczenia
net = train(net, wejscie, wyjscie);

%dane testowe - litery
testA = [0; 1; 1; 1; 0;
        1; 0; 0; 0; 1;
        1; 1; 1; 1; 1;
        1; 0; 0; 0; 1;
        1; 0; 0; 0; 1];
testa= [0; 1; 1; 0; 0;
        0; 0; 0; 1; 0;
        0; 1; 1; 1; 0;
        1; 0; 0; 1; 0;
        0; 1; 1; 1; 1];
testB= [1; 1; 1; 0; 0;
        1; 0; 0; 1; 0;
        1; 1; 1; 0; 0;
        1; 0; 0; 1; 0;
        1; 1; 1; 0; 0];
testb= [1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 1; 1; 0; 0;
        1; 0; 0; 1; 0;
        1; 1; 1; 0; 0];
testC= [0; 1; 1; 1; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        0; 1; 1; 1; 0];
testc= [0; 0; 0; 0; 0;
        0; 0; 0; 0; 0;
        0; 1; 1; 0; 0;
        1; 0; 0; 0; 0;
        0; 1; 1; 0; 0]; 
testD= [1; 1; 1; 0; 0;
        1; 0; 0; 1; 0;
        1; 0; 0; 1; 0;
        1; 0; 0; 1; 0;
        1; 1; 1; 0; 0];
testd= [0; 0; 0; 1; 0;
        0; 0; 0; 1; 0;
        0; 1; 1; 1; 0;
        1; 0; 0; 1; 0;
        0; 1; 1; 1; 0];
testE= [1; 1; 1; 1; 0;
        1; 0; 0; 0; 0;
        1; 1; 1; 0; 0;
        1; 0; 0; 0; 0;
        1; 1; 1; 1; 0];
teste= [0; 1; 1; 0; 0;
        1; 0; 0; 1; 0;
        1; 1; 1; 0; 0;
        1; 0; 0; 0; 0;
        0; 1; 1; 0; 0];
testF= [1; 1; 1; 1; 0;
        1; 0; 0; 0; 0;
        1; 1; 1; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0];
testf= [0; 1; 1; 0; 0;
        1; 0; 0; 0; 0;
        1; 1; 1; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0];
testH= [1; 0; 0; 0; 1;
        1; 0; 0; 0; 1;
        1; 1; 1; 1; 1;
        1; 0; 0; 0; 1;
        1; 0; 0; 0; 1];
testh= [1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 1; 1; 0; 0;
        1; 0; 1; 0; 0;
        1; 0; 1; 0; 0];
testI= [1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0];
testi= [1; 0; 0; 0; 0;
        0; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0];
testK= [1; 0; 0; 1; 0;
        1; 0; 1; 0; 0;
        1; 1; 0; 0; 0;
        1; 0; 1; 0; 0;
        1; 0; 0; 1; 0];
testk= [1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 1; 0; 0;
        1; 1; 0; 0; 0;
        1; 0; 1; 0; 0];
testL= [1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 1; 1; 1; 0];
testl= [1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 0; 0; 0; 0;
        1; 1; 1; 0; 0];

%testowanie dzia³ania sieci
efekt=sim(net, teste);

%wypisanie efektu uczenia sieci
if round(efekt) == 0    
    disp('Ma³a litera');
else
    disp('Du¿a litera');
end